name: Optimize, Audit & Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Optimize, Audit, and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

- name: Install Node.js
  uses: actions/setup-node@v4
  with:
    node-version: '20.11.1'
    check-latest: true


      - name: Install optimization & audit tools
        run: |
          npm install -g clean-css-cli imagemin-cli imagemin-webp-cli terser html-minifier-terser lighthouse serve

      # -----------------------------
      # IMAGE OPTIMIZATION
      # -----------------------------
      - name: Convert & compress images
        run: |
          mkdir -p optimized/img
          find img -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' \) \
            -exec imagemin-webp {} --quality 80 --output optimized/{} \;
          find img -type f \( -iname '*.svg' -o -iname '*.webp' \) \
            -exec cp --parents {} optimized/ \;

      # -----------------------------
      # CSS MINIFICATION
      # -----------------------------
      - name: Minify CSS
        run: |
          mkdir -p optimized/css
          for f in $(find css -type f -name '*.css'); do
            cleancss -o optimized/$f $f
          done

      # -----------------------------
      # JS MINIFICATION
      # -----------------------------
      - name: Minify JavaScript
        run: |
          mkdir -p optimized/js
          for f in $(find js -type f -name '*.js'); do
            terser $f -o optimized/$f --compress --mangle
          done

      # -----------------------------
      # HTML MINIFICATION
      # -----------------------------
      - name: Minify HTML
        run: |
          mkdir -p optimized
          find . -type f -name "*.html" ! -path "./optimized/*" -exec sh -c '
            for file do
              out="optimized/${file#./}"
              mkdir -p "$(dirname "$out")"
              html-minifier-terser --collapse-whitespace --remove-comments \
                --remove-redundant-attributes --use-short-doctype \
                --minify-css true --minify-js true -o "$out" "$file"
            done
          ' sh {} +

      # -----------------------------
      # RUN LIGHTHOUSE AUDIT
      # -----------------------------
      - name: Start temporary local server
        run: |
          nohup serve optimized -l 8080 & sleep 5

      - name: Run Lighthouse audit
        run: |
          mkdir -p lighthouse-report
          lighthouse http://localhost:8080 --output html --output json \
            --output-path=./lighthouse-report/report.html --quiet \
            --only-categories=performance,accessibility,best-practices,seo

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse-report/

      # -----------------------------
      # Upload to GitHub Pages Artifact
      # -----------------------------
      - name: Upload optimized site for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: optimized/

  # -----------------------------
  # DEPLOY JOB
  # -----------------------------
  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
